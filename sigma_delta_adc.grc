<?xml version='1.0' encoding='utf-8'?>
<?grc format='1' created='3.7.11'?>
<flow_graph>
  <timestamp>Wed Jun 24 17:57:55 2020</timestamp>
  <block>
    <key>options</key>
    <param>
      <key>author</key>
      <value></value>
    </param>
    <param>
      <key>window_size</key>
      <value></value>
    </param>
    <param>
      <key>category</key>
      <value>[GRC Hier Blocks]</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>description</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 8)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>generate_options</key>
      <value>qt_gui</value>
    </param>
    <param>
      <key>hier_block_src_path</key>
      <value>.:</value>
    </param>
    <param>
      <key>id</key>
      <value>top_block</value>
    </param>
    <param>
      <key>max_nouts</key>
      <value>0</value>
    </param>
    <param>
      <key>qt_qss_theme</key>
      <value></value>
    </param>
    <param>
      <key>realtime_scheduling</key>
      <value></value>
    </param>
    <param>
      <key>run_command</key>
      <value>{python} -u {filename}</value>
    </param>
    <param>
      <key>run_options</key>
      <value>prompt</value>
    </param>
    <param>
      <key>run</key>
      <value>True</value>
    </param>
    <param>
      <key>thread_safe_setters</key>
      <value></value>
    </param>
    <param>
      <key>title</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(0, 268)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>M</value>
    </param>
    <param>
      <key>value</key>
      <value>64</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 160)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>value</key>
      <value>256e3</value>
    </param>
  </block>
  <block>
    <key>analog_sig_source_x</key>
    <param>
      <key>amp</key>
      <value>0.9</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>freq</key>
      <value>1000</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(128, 132)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>analog_sig_source_x_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>offset</key>
      <value>0</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>samp_rate</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>waveform</key>
      <value>analog.GR_COS_WAVE</value>
    </param>
  </block>
  <block>
    <key>blocks_int_to_float</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(728, 164)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_int_to_float_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>scale</key>
      <value>1</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>blocks_throttle</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(304, 164)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_throttle_0</value>
    </param>
    <param>
      <key>ignoretag</key>
      <value>True</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>samples_per_second</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('4 bit signed quantizer', 'blk', [('example_param', '1.0')], [('0', 'float', 1)], [('0', 'int', 1)], 'Embedded Python Block example - a simple multiply const', ['example_param'])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>"""
Embedded Python Blocks:

Each time this file is saved, GRC will instantiate the first class it finds
to get ports and parameters of your block. The arguments to __init__  will
be the parameters. All of them are required to have default values!
"""

import numpy as np
from gnuradio import gr


class blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block
    """Embedded Python Block example - a simple multiply const"""

    def __init__(self, example_param=1.0):  # only default arguments here
        """4 bit signed quantizer"""
        gr.sync_block.__init__(
            self,
            name='4 bit signed quantizer',   # will show up in GRC
            in_sig=[np.float32],
            out_sig=[np.int32]
        )
        # if an attribute with the same name as a parameter is found,
        # a callback is registered (properties work, too).
        self.example_param = example_param

    def work(self, input_items, output_items):
        """example: multiply with constant"""
	for i in range(0,len(input_items[0])):
        	if (input_items[0][i] &gt;= -0.0625 and input_items[0][i] &lt; 0.0625) :
			output_items[0][i] = 0
		elif (input_items[0][i] &gt;=0.0625 and input_items[0][i] &lt; 0.1875) :
			output_items[0][i] = 1
		elif (input_items[0][i] &gt;=0.1875  and input_items[0][i] &lt; 0.3125) :
			output_items[0][i] = 2
		elif (input_items[0][i] &gt;= 0.3125 and input_items[0][i] &lt; 0.4375) :
			output_items[0][i] = 3
		elif (input_items[0][i] &gt;= 0.4375 and input_items[0][i] &lt; 0.5625) :
			output_items[0][i] = 4
		elif (input_items[0][i] &gt;= 0.5625 and input_items[0][i] &lt; 0.6875) :
			output_items[0][i] = 5
		elif (input_items[0][i] &gt;= 0.6875 and input_items[0][i] &lt; 0.8125) :
			output_items[0][i] = 6
		elif (input_items[0][i] &gt;= 0.8125 and input_items[0][i] &lt; 0.9375) :
			output_items[0][i] = 7
		elif (input_items[0][i] &lt; -0.0625 and input_items[0][i] &gt;= -0.1875) :
			output_items[0][i] = -1
		elif (input_items[0][i] &lt; -0.1875 and input_items[0][i] &gt;= -0.3125) :
			output_items[0][i] = -2
		elif (input_items[0][i] &lt; -0.3125 and input_items[0][i] &gt;= -0.4375) :
			output_items[0][i] = -3
		elif (input_items[0][i] &lt; -0.4375 and input_items[0][i] &gt;= -0.5625) :
			output_items[0][i] = -4
		elif (input_items[0][i] &lt; -0.5625 and input_items[0][i] &gt;= -0.6875) :
			output_items[0][i] = -5
		elif (input_items[0][i] &lt; -0.6875 and input_items[0][i] &gt;= -0.8125) :
			output_items[0][i] = -6
		elif (input_items[0][i] &lt; -0.8125 and input_items[0][i] &gt;= -0.9375) :
			output_items[0][i] = -7
		elif (input_items[0][i] &lt; -0.9375 and input_items[0][i] &gt;= -1) :
			output_items[0][i] = -8
		
        return len(output_items[0])
</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>example_param</key>
      <value>1.0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(488, 164)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>epy_block_0</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('4 bit signed quantizer with first order SD', 'blk', [('example_param', '1.0')], [('0', 'float', 1)], [('0', 'float', 1)], 'Embedded Python Block example - a simple multiply const', ['example_param'])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>"""
Embedded Python Blocks:

Each time this file is saved, GRC will instantiate the first class it finds
to get ports and parameters of your block. The arguments to __init__  will
be the parameters. All of them are required to have default values!
"""

import numpy as np
from gnuradio import gr
import math

class blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block
    """Embedded Python Block example - a simple multiply const"""

    def __init__(self, example_param=1.0):  # only default arguments here
        """4 bit signed quantizer with first order SD"""
        gr.sync_block.__init__(
            self,
            name='4 bit signed quantizer with first order SD',   # will show up in GRC
            in_sig=[np.float32],
            out_sig=[np.float32]
        )
        # if an attribute with the same name as a parameter is found,
        # a callback is registered (properties work, too).
        self.example_param = example_param

    def work(self, input_items, output_items):
        """example: multiply with constant"""
	u = []
	u.append([])
	
	v = []
	v.append([])

	dac_out = []
	dac_out.append([])

	u[0][:] = np.zeros(len(input_items[0])) 
	v[0][:] = np.zeros(len(input_items[0])) 
	dac_out[0][:] = np.zeros(len(input_items[0])) 

	u[0][0] = input_items[0][0]
	v[0][0] = 0
	output_items[0][0] = 0

	for i in range(1,len(input_items[0])):
		u[0][i] = input_items[0][i] - dac_out[0][i-1] 
		v[0][i] = v[0][i-1] + u[0][i]
        	if (v[0][i] &gt;= -0.0625 and v[0][i] &lt; 0.0625) :
			output_items[0][i] = 0
			dac_out[0][i] = (-0.0625 + 0.0625)/2
		elif (v[0][i] &gt;=0.0625 and v[0][i] &lt; 0.1875) :
			output_items[0][i] = 1
			dac_out[0][i] = (0.0625 + 0.1875)/2
		elif (v[0][i] &gt;=0.1875  and v[0][i] &lt; 0.3125) :
			output_items[0][i] = 2
			dac_out[0][i] = (0.1875 + 0.3125)/2
		elif (v[0][i] &gt;= 0.3125 and v[0][i] &lt; 0.4375) :
			output_items[0][i] = 3
			dac_out[0][i] = (0.3125 + 0.4375)/2
		elif (v[0][i] &gt;= 0.4375 and v[0][i] &lt; 0.5625) :
			output_items[0][i] = 4
			dac_out[0][i] = (0.4375 + 0.5625)/2
		elif (v[0][i] &gt;= 0.5625 and v[0][i] &lt; 0.6875) :
			output_items[0][i] = 5
			dac_out[0][i] = (0.5625 + 0.6875)/2
		elif (v[0][i] &gt;= 0.6875 and v[0][i] &lt; 0.8125) :
			output_items[0][i] = 6
			dac_out[0][i] = (0.6875 + 0.8125)/2
		elif (v[0][i] &gt;= 0.8125 and v[0][i] &lt; 0.9375) :
			output_items[0][i] = 7
			dac_out[0][i] = (0.8125 + 0.9375)/2
		elif (v[0][i] &gt;= 0.9375) :
			output_items[0][i] = 7
			dac_out[0][i] = (0.8125 + 0.9375)/2
		elif (v[0][i] &lt; -0.0625 and v[0][i] &gt;= -0.1875) :
			output_items[0][i] = -1
			dac_out[0][i] = (-0.0625 - 0.1875)/2
		elif (v[0][i] &lt; -0.1875 and v[0][i] &gt;= -0.3125) :
			output_items[0][i] = -2
			dac_out[0][i] = (-0.1875 - 0.3125)/2
		elif (v[0][i] &lt; -0.3125 and v[0][i] &gt;= -0.4375) :
			output_items[0][i] = -3
			dac_out[0][i] = (-0.3125 - 0.4375)/2
		elif (v[0][i] &lt; -0.4375 and v[0][i] &gt;= -0.5625) :
			output_items[0][i] = -4
			dac_out[0][i] = (-0.4375 - 0.5625)/2
		elif (v[0][i] &lt; -0.5625 and v[0][i] &gt;= -0.6875) :
			output_items[0][i] = -5
			dac_out[0][i] = (-0.5625 - 0.6875)/2
		elif (v[0][i] &lt; -0.6875 and v[0][i] &gt;= -0.8125) :
			output_items[0][i] = -6
			dac_out[0][i] = (-0.6875 - 0.8125)/2
		elif (v[0][i] &lt; -0.8125 and v[0][i] &gt;= -0.9375) :
			output_items[0][i] = -7
			dac_out[0][i] = (-0.8125 - 0.9375)/2
		elif (v[0][i] &lt; -0.9375 and v[0][i] &gt;= -1) :
			output_items[0][i] = -8
			dac_out[0][i] = (-0.9375 - 1)/2
		elif (v[0][i] &lt; -1):
			output_items[0][i] = -8
			dac_out[0][i] = (-0.9375 - 1)/2

		
        return len(output_items[0])
</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>example_param</key>
      <value>1.0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(264, 364)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>epy_block_1</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('4 bit signed quantizer with second order SD', 'blk', [('example_param', '1.0')], [('0', 'float', 1)], [('0', 'float', 1)], 'Embedded Python Block example - a simple multiply const', ['example_param'])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>"""
Embedded Python Blocks:

Each time this file is saved, GRC will instantiate the first class it finds
to get ports and parameters of your block. The arguments to __init__  will
be the parameters. All of them are required to have default values!
"""

import numpy as np
from gnuradio import gr
import math

class blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block
    """Embedded Python Block example - a simple multiply const"""

    def __init__(self, example_param=1.0):  # only default arguments here
        """4 bit signed quantizer with second order SD"""
        gr.sync_block.__init__(
            self,
            name='4 bit signed quantizer with second order SD',   # will show up in GRC
            in_sig=[np.float32],
            out_sig=[np.float32]
        )
        # if an attribute with the same name as a parameter is found,
        # a callback is registered (properties work, too).
        self.example_param = example_param

    def work(self, input_items, output_items):
        """example: multiply with constant"""
	u = []
	u.append([])
	
	v = []
	v.append([])

	x = []
	x.append([])

	y = []
	y.append([])

	dac_out = []
	dac_out.append([])


	u[0][:] = np.zeros(len(input_items[0])) 
	v[0][:] = np.zeros(len(input_items[0]))
	x[0][:] = np.zeros(len(input_items[0]))
	y[0][:] = np.zeros(len(input_items[0]))		
	dac_out[0][:] = np.zeros(len(input_items[0]))	 

	x[0][0] = input_items[0][0]
	y[0][0] = 0
	u[0][0] = 0
	v[0][0] = 0
	output_items[0][0] = 0
	
	
	for i in range(1,len(input_items[0])):
		x[0][i] = input_items[0][i] - dac_out[0][i-1] 
		y[0][i] = y[0][i-1] + x[0][i]
		if y[0][i] &gt; 1:
			y[0][i] = 1
		elif y[0][i] &lt; -1:
			y[0][i] = -1
		u[0][i] = y[0][i] - dac_out[0][i-1]
		v[0][i] = v[0][i-1] + u[0][i]
        	if (v[0][i] &gt;= -0.0625 and v[0][i] &lt; 0.0625) :
			output_items[0][i] = 0
			dac_out[0][i] = (-0.0625 + 0.0625)/2
		elif (v[0][i] &gt;=0.0625 and v[0][i] &lt; 0.1875) :
			output_items[0][i] = 1
			dac_out[0][i] = (0.0625 + 0.1875)/2
		elif (v[0][i] &gt;=0.1875  and v[0][i] &lt; 0.3125) :
			output_items[0][i] = 2
			dac_out[0][i] = (0.1875 + 0.3125)/2
		elif (v[0][i] &gt;= 0.3125 and v[0][i] &lt; 0.4375) :
			output_items[0][i] = 3
			dac_out[0][i] = (0.3125 + 0.4375)/2
		elif (v[0][i] &gt;= 0.4375 and v[0][i] &lt; 0.5625) :
			output_items[0][i] = 4
			dac_out[0][i] = (0.4375 + 0.5625)/2
		elif (v[0][i] &gt;= 0.5625 and v[0][i] &lt; 0.6875) :
			output_items[0][i] = 5
			dac_out[0][i] = (0.5625 + 0.6875)/2
		elif (v[0][i] &gt;= 0.6875 and v[0][i] &lt; 0.8125) :
			output_items[0][i] = 6
			dac_out[0][i] = (0.6875 + 0.8125)/2
		elif (v[0][i] &gt;= 0.8125 and v[0][i] &lt; 0.9375) :
			output_items[0][i] = 7
			dac_out[0][i] = (0.8125 + 0.9375)/2
		elif (v[0][i] &gt;= 0.9375) :
			output_items[0][i] = 7
			dac_out[0][i] = (0.8125 + 0.9375)/2
		elif (v[0][i] &lt; -0.0625 and v[0][i] &gt;= -0.1875) :
			output_items[0][i] = -1
			dac_out[0][i] = (-0.0625 - 0.1875)/2
		elif (v[0][i] &lt; -0.1875 and v[0][i] &gt;= -0.3125) :
			output_items[0][i] = -2
			dac_out[0][i] = (-0.1875 - 0.3125)/2
		elif (v[0][i] &lt; -0.3125 and v[0][i] &gt;= -0.4375) :
			output_items[0][i] = -3
			dac_out[0][i] = (-0.3125 - 0.4375)/2
		elif (v[0][i] &lt; -0.4375 and v[0][i] &gt;= -0.5625) :
			output_items[0][i] = -4
			dac_out[0][i] = (-0.4375 - 0.5625)/2
		elif (v[0][i] &lt; -0.5625 and v[0][i] &gt;= -0.6875) :
			output_items[0][i] = -5
			dac_out[0][i] = (-0.5625 - 0.6875)/2
		elif (v[0][i] &lt; -0.6875 and v[0][i] &gt;= -0.8125) :
			output_items[0][i] = -6
			dac_out[0][i] = (-0.6875 - 0.8125)/2
		elif (v[0][i] &lt; -0.8125 and v[0][i] &gt;= -0.9375) :
			output_items[0][i] = -7
			dac_out[0][i] = (-0.8125 - 0.9375)/2
		elif (v[0][i] &lt; -0.9375 and v[0][i] &gt;= -1) :
			output_items[0][i] = -8
			dac_out[0][i] = (-0.9375 - 1)/2
		elif (v[0][i] &lt; -1):
			output_items[0][i] = -8
			dac_out[0][i] = (-0.9375 - 1)/2

		

		
        return len(output_items[0])
</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>example_param</key>
      <value>1.0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(264, 460)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>epy_block_1_0</value>
    </param>
  </block>
  <block>
    <key>low_pass_filter</key>
    <param>
      <key>beta</key>
      <value>6.76</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>cutoff_freq</key>
      <value>1e3</value>
    </param>
    <param>
      <key>decim</key>
      <value>M</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>type</key>
      <value>fir_filter_fff</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(648, 316)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>gain</key>
      <value>M</value>
    </param>
    <param>
      <key>id</key>
      <value>low_pass_filter_0</value>
    </param>
    <param>
      <key>interp</key>
      <value>1</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>samp_rate</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>width</key>
      <value>0.2e3</value>
    </param>
    <param>
      <key>win</key>
      <value>firdes.WIN_HAMMING</value>
    </param>
  </block>
  <block>
    <key>low_pass_filter</key>
    <param>
      <key>beta</key>
      <value>6.76</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>cutoff_freq</key>
      <value>1e3</value>
    </param>
    <param>
      <key>decim</key>
      <value>M</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>type</key>
      <value>fir_filter_fff</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(648, 460)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>gain</key>
      <value>M</value>
    </param>
    <param>
      <key>id</key>
      <value>low_pass_filter_0_0</value>
    </param>
    <param>
      <key>interp</key>
      <value>1</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>samp_rate</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>width</key>
      <value>0.2e3</value>
    </param>
    <param>
      <key>win</key>
      <value>firdes.WIN_HAMMING</value>
    </param>
  </block>
  <block>
    <key>qtgui_freq_sink_x</key>
    <param>
      <key>autoscale</key>
      <value>False</value>
    </param>
    <param>
      <key>average</key>
      <value>0.05</value>
    </param>
    <param>
      <key>axislabels</key>
      <value>True</value>
    </param>
    <param>
      <key>bw</key>
      <value>samp_rate/M</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>fc</key>
      <value>0</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>ctrlpanel</key>
      <value>False</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>fftsize</key>
      <value>4096</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1040, 412)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value></value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>grid</key>
      <value>False</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_freq_sink_x_0</value>
    </param>
    <param>
      <key>legend</key>
      <value>True</value>
    </param>
    <param>
      <key>alpha1</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color1</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label1</key>
      <value></value>
    </param>
    <param>
      <key>width1</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha10</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color10</key>
      <value>"dark blue"</value>
    </param>
    <param>
      <key>label10</key>
      <value></value>
    </param>
    <param>
      <key>width10</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha2</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color2</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label2</key>
      <value></value>
    </param>
    <param>
      <key>width2</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha3</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color3</key>
      <value>"green"</value>
    </param>
    <param>
      <key>label3</key>
      <value></value>
    </param>
    <param>
      <key>width3</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha4</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color4</key>
      <value>"black"</value>
    </param>
    <param>
      <key>label4</key>
      <value></value>
    </param>
    <param>
      <key>width4</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha5</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color5</key>
      <value>"cyan"</value>
    </param>
    <param>
      <key>label5</key>
      <value></value>
    </param>
    <param>
      <key>width5</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha6</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color6</key>
      <value>"magenta"</value>
    </param>
    <param>
      <key>label6</key>
      <value></value>
    </param>
    <param>
      <key>width6</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha7</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color7</key>
      <value>"yellow"</value>
    </param>
    <param>
      <key>label7</key>
      <value></value>
    </param>
    <param>
      <key>width7</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha8</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color8</key>
      <value>"dark red"</value>
    </param>
    <param>
      <key>label8</key>
      <value></value>
    </param>
    <param>
      <key>width8</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha9</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color9</key>
      <value>"dark green"</value>
    </param>
    <param>
      <key>label9</key>
      <value></value>
    </param>
    <param>
      <key>width9</key>
      <value>1</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>name</key>
      <value>""</value>
    </param>
    <param>
      <key>nconnections</key>
      <value>2</value>
    </param>
    <param>
      <key>showports</key>
      <value>True</value>
    </param>
    <param>
      <key>freqhalf</key>
      <value>True</value>
    </param>
    <param>
      <key>tr_chan</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_level</key>
      <value>0.0</value>
    </param>
    <param>
      <key>tr_mode</key>
      <value>qtgui.TRIG_MODE_FREE</value>
    </param>
    <param>
      <key>tr_tag</key>
      <value>""</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>update_time</key>
      <value>0.10</value>
    </param>
    <param>
      <key>wintype</key>
      <value>firdes.WIN_BLACKMAN_hARRIS</value>
    </param>
    <param>
      <key>label</key>
      <value>Relative Gain</value>
    </param>
    <param>
      <key>ymax</key>
      <value>10</value>
    </param>
    <param>
      <key>ymin</key>
      <value>-140</value>
    </param>
    <param>
      <key>units</key>
      <value>dB</value>
    </param>
  </block>
  <block>
    <key>qtgui_time_sink_x</key>
    <param>
      <key>autoscale</key>
      <value>False</value>
    </param>
    <param>
      <key>axislabels</key>
      <value>True</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>ctrlpanel</key>
      <value>True</value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>entags</key>
      <value>True</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1088, 516)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value></value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>grid</key>
      <value>False</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_time_sink_x_0_0</value>
    </param>
    <param>
      <key>legend</key>
      <value>True</value>
    </param>
    <param>
      <key>alpha1</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color1</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label1</key>
      <value></value>
    </param>
    <param>
      <key>marker1</key>
      <value>-1</value>
    </param>
    <param>
      <key>style1</key>
      <value>1</value>
    </param>
    <param>
      <key>width1</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha10</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color10</key>
      <value>"blue"</value>
    </param>
    <param>
      <key>label10</key>
      <value></value>
    </param>
    <param>
      <key>marker10</key>
      <value>-1</value>
    </param>
    <param>
      <key>style10</key>
      <value>1</value>
    </param>
    <param>
      <key>width10</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha2</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color2</key>
      <value>"red"</value>
    </param>
    <param>
      <key>label2</key>
      <value></value>
    </param>
    <param>
      <key>marker2</key>
      <value>-1</value>
    </param>
    <param>
      <key>style2</key>
      <value>1</value>
    </param>
    <param>
      <key>width2</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha3</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color3</key>
      <value>"green"</value>
    </param>
    <param>
      <key>label3</key>
      <value></value>
    </param>
    <param>
      <key>marker3</key>
      <value>-1</value>
    </param>
    <param>
      <key>style3</key>
      <value>1</value>
    </param>
    <param>
      <key>width3</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha4</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color4</key>
      <value>"black"</value>
    </param>
    <param>
      <key>label4</key>
      <value></value>
    </param>
    <param>
      <key>marker4</key>
      <value>-1</value>
    </param>
    <param>
      <key>style4</key>
      <value>1</value>
    </param>
    <param>
      <key>width4</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha5</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color5</key>
      <value>"cyan"</value>
    </param>
    <param>
      <key>label5</key>
      <value></value>
    </param>
    <param>
      <key>marker5</key>
      <value>-1</value>
    </param>
    <param>
      <key>style5</key>
      <value>1</value>
    </param>
    <param>
      <key>width5</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha6</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color6</key>
      <value>"magenta"</value>
    </param>
    <param>
      <key>label6</key>
      <value></value>
    </param>
    <param>
      <key>marker6</key>
      <value>-1</value>
    </param>
    <param>
      <key>style6</key>
      <value>1</value>
    </param>
    <param>
      <key>width6</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha7</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color7</key>
      <value>"yellow"</value>
    </param>
    <param>
      <key>label7</key>
      <value></value>
    </param>
    <param>
      <key>marker7</key>
      <value>-1</value>
    </param>
    <param>
      <key>style7</key>
      <value>1</value>
    </param>
    <param>
      <key>width7</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha8</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color8</key>
      <value>"dark red"</value>
    </param>
    <param>
      <key>label8</key>
      <value></value>
    </param>
    <param>
      <key>marker8</key>
      <value>-1</value>
    </param>
    <param>
      <key>style8</key>
      <value>1</value>
    </param>
    <param>
      <key>width8</key>
      <value>1</value>
    </param>
    <param>
      <key>alpha9</key>
      <value>1.0</value>
    </param>
    <param>
      <key>color9</key>
      <value>"dark green"</value>
    </param>
    <param>
      <key>label9</key>
      <value></value>
    </param>
    <param>
      <key>marker9</key>
      <value>-1</value>
    </param>
    <param>
      <key>style9</key>
      <value>1</value>
    </param>
    <param>
      <key>width9</key>
      <value>1</value>
    </param>
    <param>
      <key>name</key>
      <value>""</value>
    </param>
    <param>
      <key>nconnections</key>
      <value>2</value>
    </param>
    <param>
      <key>size</key>
      <value>4096</value>
    </param>
    <param>
      <key>srate</key>
      <value>samp_rate/M</value>
    </param>
    <param>
      <key>stemplot</key>
      <value>False</value>
    </param>
    <param>
      <key>tr_chan</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_delay</key>
      <value>0</value>
    </param>
    <param>
      <key>tr_level</key>
      <value>0.0</value>
    </param>
    <param>
      <key>tr_mode</key>
      <value>qtgui.TRIG_MODE_FREE</value>
    </param>
    <param>
      <key>tr_slope</key>
      <value>qtgui.TRIG_SLOPE_POS</value>
    </param>
    <param>
      <key>tr_tag</key>
      <value>""</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>update_time</key>
      <value>0.10</value>
    </param>
    <param>
      <key>ylabel</key>
      <value>Amplitude</value>
    </param>
    <param>
      <key>yunit</key>
      <value>""</value>
    </param>
    <param>
      <key>ymax</key>
      <value>1</value>
    </param>
    <param>
      <key>ymin</key>
      <value>-1</value>
    </param>
  </block>
  <connection>
    <source_block_id>analog_sig_source_x_0</source_block_id>
    <sink_block_id>blocks_throttle_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_throttle_0</source_block_id>
    <sink_block_id>epy_block_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_throttle_0</source_block_id>
    <sink_block_id>epy_block_1</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_throttle_0</source_block_id>
    <sink_block_id>epy_block_1_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>epy_block_0</source_block_id>
    <sink_block_id>blocks_int_to_float_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>epy_block_1</source_block_id>
    <sink_block_id>low_pass_filter_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>epy_block_1_0</source_block_id>
    <sink_block_id>low_pass_filter_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>low_pass_filter_0</source_block_id>
    <sink_block_id>qtgui_freq_sink_x_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>1</sink_key>
  </connection>
  <connection>
    <source_block_id>low_pass_filter_0</source_block_id>
    <sink_block_id>qtgui_time_sink_x_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>1</sink_key>
  </connection>
  <connection>
    <source_block_id>low_pass_filter_0_0</source_block_id>
    <sink_block_id>qtgui_freq_sink_x_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>low_pass_filter_0_0</source_block_id>
    <sink_block_id>qtgui_time_sink_x_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
</flow_graph>
